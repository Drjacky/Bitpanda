apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion

    dataBinding {
        enabled = true
    }
    defaultConfig {
        multiDexEnabled true
        applicationId "app.web.drjackycv.bitpanda"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner rootProject.ext.testInstrumentationRunner
        javaCompileOptions.annotationProcessorOptions.arguments =
                ["room.schemaLocation": "$projectDir/schemas".toString()]
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"
            signingConfig android.signingConfigs.debug
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    lintOptions.abortOnError = false
    testOptions.unitTests.returnDefaultValues = true
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }
}

afterEvaluate {
    android.sourceSets.all { sourceSet ->
        // Ensure Kt ain't used in production code
        if (!sourceSet.name.startsWith("test"))
            sourceSet.kotlin.setSrcDirs([])
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.multidex:multidex:$multidexVersion"
    //dependency injection
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    api "com.google.dagger:dagger-android:$daggerVersion"
    api "com.google.dagger:dagger-android-support:$daggerVersion"
    //network
    implementation "com.squareup.retrofit2:retrofit:$retrofit2Version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit2Version"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingVersion"
    //other
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation "com.google.android.material:material:$materialVersion"
    //test
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation project(':presentation')
    implementation project(':data')
    implementation project(':domain')
}